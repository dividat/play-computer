- name: Install OpenSSH server
  become: true
  apt:
    name: openssh-server

- name: Ensure user exists
  user:
    name: "{{ user }}"

- name: Ensure ~/.ssh directory exists
  become: true
  become_user: "{{ user }}"
  file:
    path: /home/{{ user }}/.ssh/
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory

- name: Install authorized_keys
  become: true
  become_user: "{{ user }}"
  template:
    src: templates/authorized_keys
    dest: /home/{{ user }}/.ssh/authorized_keys

- name: Only allow public key authentication
  become: true
  blockinfile:
    dest: /etc/ssh/sshd_config
    block: |
      AllowUsers {{ user }}
      PubkeyAuthentication yes
      PasswordAuthentication no

- name: Reload sshd
  become: true
  service:
    name: ssh
    state: reloaded
  # May fail during preseed
  ignore_errors: yes

- name: Enable NOPASSWD sudo access
  become: true
  lineinfile:
    dest: /etc/sudoers
    line: "{{ user }} ALL=(ALL) NOPASSWD: ALL"


# Desktop shortcuts for admins

- name: Ensure Desktop exists
  become: true
  become_user: "{{ user }}"
  file:
    path: /home/{{ user }}/Desktop/
    state: directory

- name: Add setup to Desktop
  become: true
  become_user: "{{ user }}"
  template:
    src: templates/setup.desktop
    dest: /home/{{ user }}/Desktop/setup.desktop
    mode: "u+x"

- name: Add clean to Desktop
  become: true
  become_user: "{{ user }}"
  template:
    src: templates/clean.desktop
    dest: /home/{{ user }}/Desktop/clean.desktop
    mode: "u+x"


# Zerotier-one

- name: Add zerotier gpg key to apt
  become: true
  apt_key:
    id: 23E52A61
    url: https://www.zerotier.com/misc/contact@zerotier.com.gpg

- name: Add zerotier apt repository
  become: true
  apt_repository:
    repo: deb http://download.zerotier.com/debian/xenial xenial main

- name: Install zerotier-one
  become: true
  apt:
    name: zerotier-one

- name: Enable and start zerotier service
  become: true
  service:
    name: zerotier-one
    enabled: yes
    state: started
  # May fail during preseed
  ignore_errors: true

- name: Join ZeroTier network
  become: true
  shell: zerotier-cli join {{ zerotier_network_id }}
  # May fail during preseed
  ignore_errors: true

- name: Join ZeroTier network on reboot
  become: true
  cron:
    name: "join Dividat ZeroTier network"
    special_time: reboot
    state: present
    job: /bin/sleep 30 ; /usr/sbin/zerotier-cli join {{ zerotier_network_id }}

- name: Remove init scripts to join ZeroTier network (deprecated by cron job at @reboot) (1/2)
  become: true
  file:
    path: /etc/rc2.d/S99join-zerotier-network
    state: absent

- name: Remove init scripts to join ZeroTier network (deprecated by cron job at @reboot) (2/2)
  become: true
  file:
    path: /etc/init.d/join-zerotier-network
    state: absent


# Prepare utilities
- name: Get play-computer repository
  become: true
  become_user: "{{ user }}"
  git:
    repo: https://github.com/dividat/play-computer.git
    dest: /home/{{ user }}/play-computer
    version: master

- name: Insall GraphicsMagick
  become: true
  apt:
    name: graphicsmagick

- name: Get nvm
  become: true
  become_user: "{{ user }}"
  git:
    repo: https://github.com/creationix/nvm.git
    dest: "{{ nvm_dir }}"
    version: "{{ nvm_version }}"


# This adds nvm to bashrc for the case that manual intervention is necessary (ansilbe does not source bashrc)
- name: Add nvm to bashrc
  become: true
  become_user: "{{ user }}"
  blockinfile:
    dest: "/home/{{ user }}/.bashrc"
    block: |
      export NVM_DIR="{{ nvm_dir }}"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

- name: Install node
  become: true
  become_user: "{{ user }}"
  environment:
    NVM_DIR: "{{ nvm_dir }}"
  shell: >
    . {{ nvm }} &&
    nvm install {{ node_version }} &&
    nvm use {{ node_version }}

- name: Install global npm dependencies
  become: true
  become_user: "{{ user }}"
  environment:
    NVM_DIR: "{{ nvm_dir }}"
  shell: >
    . {{ nvm }} &&
    npm install -g yarn

- name: Install node depedencies for label utility
  become: true
  become_user: "{{ user }}"
  environment:
    NVM_DIR: "{{ nvm_dir }}"
  shell: >
    . {{ nvm }} &&
    cd /home/{{ user }}/play-computer/utils/label &&
    yarn install --production

- name: Add "Print Labels" to Desktop
  become: true
  become_user: "{{ user }}"
  template:
    src: templates/print-labels.desktop.j2
    dest: /home/{{ user }}/Desktop/print-labels.desktop
    mode: "u+x"
